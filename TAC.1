#ACTTTTGTCTAAACCCCCCGTCCTATATATAACT

i =0

import re
from collections import defaultdict

seq = input("digite o codigo genetico:\n")
seq = seq.replace(' ','')
bases = ['A','G','C','T']

indexes = defaultdict(list)
counts = dict()

for base in bases:
    comSeq = re.compile(base)
    matches = comSeq.findall(seq)
    count = len(matches)
    counts[base] = count

    start = 0

    for match in matches:
        index = seq.find(base, start)
        indexes[base].append(index)
        start = index +1

a = indexes['A']
g = indexes['G']
c = indexes['C']
t = indexes['T']

seq_a=[]
seq_c=[]
seq_t=[]
seq_g=[]

print('As posições e tamanho de cadeias das Bases Hidrogenadas são:\n')
# Sequência de 3 base A:
try:
   for i in range(len(a)-2):
      if a[i] == a[i+1] - 1 or a[i] == a[i-1] + 1:
         seq_a.append(a[i])
   print('A', seq_a[0]+1, len(seq_a))
except IndexError:
      print('Não há cadeias na base A')

# Sequência de 3 base G:
try:
   for i in range(len(g)-2):
       if g[i] == g[i+1] - 1 or g[i] == g[i-1] + 1:
          seq_g.append(g[i])
   print('G', seq_g[0]+1, len(seq_g))
except IndexError:
    print('Não há cadeias na base G')

# Sequência de 3 base C:
try:
  for i in range(len(c)-2):
      if c[i] == c[i+1] - 1 or c[i] == c[i-1] + 1:
        seq_c.append(c[i])
  print('C', seq_c[0]+1, len(seq_c))
except IndexError:
    print('Não há cadeias na base C')


# Sequência de 3 base T:
try:
  for i in range(len(t)-2):
    if t[i] == t[i+1] - 1 or t[i] == t[i-1] + 1:
        seq_t.append(t[i])
  print('T', seq_t[0]+1, len(seq_t))
except IndexError:
    print('Não há cadeias na base T')
